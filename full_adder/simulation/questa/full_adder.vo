// Copyright (C) 2025  Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Altera and sold by Altera or its authorized distributors.  Please
// refer to the Altera Software License Subscription Agreements 
// on the Quartus Prime software download page.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 24.1std.0 Build 1077 03/04/2025 SC Lite Edition"

// DATE "08/19/2025 21:45:35"

// 
// Device: Altera EP4CE115F23C7 Package FBGA484
// 

// 
// This Verilog file should be used for Questa Intel FPGA (Verilog) only
// 

`timescale 1 ns/ 1 ps

module full_adder (
	a,
	b,
	cin,
	sum,
	cout);
input 	a;
input 	b;
input 	cin;
output 	sum;
output 	cout;

// Design Ports Information
// sum	=>  Location: PIN_Y2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// cout	=>  Location: PIN_W1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// a	=>  Location: PIN_W2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// b	=>  Location: PIN_V1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// cin	=>  Location: PIN_R3,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \sum~output_o ;
wire \cout~output_o ;
wire \cin~input_o ;
wire \a~input_o ;
wire \b~input_o ;
wire \U2|sum~0_combout ;
wire \comb~0_combout ;


hard_block auto_generated_inst(
	.devpor(devpor),
	.devclrn(devclrn),
	.devoe(devoe));

// Location: IOOBUF_X0_Y22_N23
cycloneive_io_obuf \sum~output (
	.i(\U2|sum~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\sum~output_o ),
	.obar());
// synopsys translate_off
defparam \sum~output .bus_hold = "false";
defparam \sum~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y22_N16
cycloneive_io_obuf \cout~output (
	.i(\comb~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\cout~output_o ),
	.obar());
// synopsys translate_off
defparam \cout~output .bus_hold = "false";
defparam \cout~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y23_N15
cycloneive_io_ibuf \cin~input (
	.i(cin),
	.ibar(gnd),
	.o(\cin~input_o ));
// synopsys translate_off
defparam \cin~input .bus_hold = "false";
defparam \cin~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y23_N22
cycloneive_io_ibuf \a~input (
	.i(a),
	.ibar(gnd),
	.o(\a~input_o ));
// synopsys translate_off
defparam \a~input .bus_hold = "false";
defparam \a~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y24_N1
cycloneive_io_ibuf \b~input (
	.i(b),
	.ibar(gnd),
	.o(\b~input_o ));
// synopsys translate_off
defparam \b~input .bus_hold = "false";
defparam \b~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y23_N24
cycloneive_lcell_comb \U2|sum~0 (
// Equation(s):
// \U2|sum~0_combout  = \cin~input_o  $ (\a~input_o  $ (\b~input_o ))

	.dataa(\cin~input_o ),
	.datab(\a~input_o ),
	.datac(\b~input_o ),
	.datad(gnd),
	.cin(gnd),
	.combout(\U2|sum~0_combout ),
	.cout());
// synopsys translate_off
defparam \U2|sum~0 .lut_mask = 16'h9696;
defparam \U2|sum~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y23_N26
cycloneive_lcell_comb \comb~0 (
// Equation(s):
// \comb~0_combout  = (\cin~input_o  & ((\a~input_o ) # (\b~input_o ))) # (!\cin~input_o  & (\a~input_o  & \b~input_o ))

	.dataa(\cin~input_o ),
	.datab(\a~input_o ),
	.datac(\b~input_o ),
	.datad(gnd),
	.cin(gnd),
	.combout(\comb~0_combout ),
	.cout());
// synopsys translate_off
defparam \comb~0 .lut_mask = 16'hE8E8;
defparam \comb~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign sum = \sum~output_o ;

assign cout = \cout~output_o ;

endmodule

module hard_block (

	devpor,
	devclrn,
	devoe);

// Design Ports Information
// ~ALTERA_ASDO_DATA1~	=>  Location: PIN_D1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_FLASH_nCE_nCSO~	=>  Location: PIN_E2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DCLK~	=>  Location: PIN_K2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DATA0~	=>  Location: PIN_K1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_nCEO~	=>  Location: PIN_K22,	 I/O Standard: 2.5 V,	 Current Strength: 8mA

input 	devpor;
input 	devclrn;
input 	devoe;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

wire \~ALTERA_ASDO_DATA1~~padout ;
wire \~ALTERA_FLASH_nCE_nCSO~~padout ;
wire \~ALTERA_DATA0~~padout ;
wire \~ALTERA_ASDO_DATA1~~ibuf_o ;
wire \~ALTERA_FLASH_nCE_nCSO~~ibuf_o ;
wire \~ALTERA_DATA0~~ibuf_o ;


endmodule
